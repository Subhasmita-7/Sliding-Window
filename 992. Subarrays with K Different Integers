Input: nums = [1,2,1,2,3], k = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]


class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
        return subarray(nums , k) - subarray(nums , k-1);
    }
    private int subarray(int[] nums, int k){
        int count = 0;
        int left = 0;
        Map<Integer,Integer> mp = new HashMap<>();
        for(int right = 0 ; right < nums.length ; right++){
            mp.put(nums[right] , mp.getOrDefault(nums[right], 0)+1);
            if(mp.get(nums[right]) == 1){
                k--;
            } 
            while(k<0){
                mp.put(nums[left] , mp.get(nums[left])-1);
                if(mp.get(nums[left]) == 0){
                    k++;
                }
                left++;
            }
            count = count+(right-left+1);
        }
        return count;
    }
}
