Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.


class Solution {
    public int longestOnes(int[] nums, int k) {
        int left = 0;
        int count = 0;
        int len = 0;
        for(int right = 0 ; right < nums.length ; right++){
            if(nums[right] == 0){
                count++;
            }
            if(count > k){
                if(nums[left] == 0){
                    count--;
                }
                left++;
            }
            len = Math.max(len,right-left+1);
        }
        return len;
    }
}
